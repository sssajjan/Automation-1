<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[testA.....]]>
    </line>
    <line>
      <![CDATA[testA status is 1]]>
    </line>
    <line>
      <![CDATA[testB....]]>
    </line>
    <line>
      <![CDATA[testB status is 2]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="31" started-at="2017-12-16T05:10:19Z" finished-at="2017-12-16T05:10:19Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="31" started-at="2017-12-16T05:10:19Z" finished-at="2017-12-16T05:10:19Z">
      <class name="script.Demo">
        <test-method status="PASS" signature="testA()[pri:0, instance:script.Demo@7f9a81e8]" name="testA" duration-ms="16" started-at="2017-12-16T10:40:19Z" finished-at="2017-12-16T10:40:19Z">
          <reporter-output>
            <line>
              <![CDATA[testA.....]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="am(org.testng.ITestResult)[pri:0, instance:script.Demo@7f9a81e8]" name="am" is-config="true" duration-ms="0" started-at="2017-12-16T10:40:19Z" finished-at="2017-12-16T10:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testB status=FAILURE method=Demo.testB()[pri:0, instance:script.Demo@7f9a81e8] output=testB....]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testB status is 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method status="FAIL" signature="testB()[pri:0, instance:script.Demo@7f9a81e8]" name="testB" duration-ms="0" started-at="2017-12-16T10:40:19Z" finished-at="2017-12-16T10:40:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at script.Demo.testB(Demo.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[testB....]]>
            </line>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="am(org.testng.ITestResult)[pri:0, instance:script.Demo@7f9a81e8]" name="am" is-config="true" duration-ms="0" started-at="2017-12-16T10:40:19Z" finished-at="2017-12-16T10:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=Demo.testA()[pri:0, instance:script.Demo@7f9a81e8] output=testA.....]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testA status is 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- am -->
      </class> <!-- script.Demo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
